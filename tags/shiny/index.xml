<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Shiny on Simon Steiger</title>
    <link>http://simontuk.github.io/tags/shiny/</link>
    <description>Recent content in Shiny on Simon Steiger</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 27 Sep 2017 00:00:00 +0000</lastBuildDate>
    <atom:link href="/tags/shiny/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Shiny on your github.io</title>
      <link>http://simontuk.github.io/post/shiny-on-your-github-io/</link>
      <pubDate>Wed, 27 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>http://simontuk.github.io/post/shiny-on-your-github-io/</guid>
      <description>&lt;div id=&#34;section-how-to-write-a-.rmd-so-you-will-host-a-shiny-application-on-your-homepage-in-the-end&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;How to write a .rmd so you will host a shiny application on your homepage in the end?&lt;/h1&gt;
&lt;p&gt;Create the UI for the app. Link to &lt;a href=&#34;https://shiny.rstudio.com/tutorial/written-tutorial/lesson1/&#34;&gt;Tutorial&lt;/a&gt; Iâ€™m following.&lt;/p&gt;
&lt;div id=&#34;section-ui-to-create-an-interactive-histogram&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;UI to create an interactive histogram:&lt;/h2&gt;
&lt;p&gt;saved as &lt;code&gt;Shinyapp_1/ui.R&lt;/code&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;## ui.R 

library(shiny)
library(ggplot2)

dataset &amp;lt;- diamonds

fluidPage(
  
  titlePanel(&amp;quot;Diamonds Explorer&amp;quot;),
  
  sidebarPanel(
    
    sliderInput(&amp;#39;sampleSize&amp;#39;, &amp;#39;Sample Size&amp;#39;, min=1, max=nrow(dataset),
                value=min(1000, nrow(dataset)), step=500, round=0),
    
    selectInput(&amp;#39;x&amp;#39;, &amp;#39;X&amp;#39;, names(dataset)),
    selectInput(&amp;#39;y&amp;#39;, &amp;#39;Y&amp;#39;, names(dataset), names(dataset)[[2]]),
    selectInput(&amp;#39;color&amp;#39;, &amp;#39;Color&amp;#39;, c(&amp;#39;None&amp;#39;, names(dataset))),
    
    checkboxInput(&amp;#39;jitter&amp;#39;, &amp;#39;Jitter&amp;#39;),
    checkboxInput(&amp;#39;smooth&amp;#39;, &amp;#39;Smooth&amp;#39;),
    
    selectInput(&amp;#39;facet_row&amp;#39;, &amp;#39;Facet Row&amp;#39;, c(None=&amp;#39;.&amp;#39;, names(dataset))),
    selectInput(&amp;#39;facet_col&amp;#39;, &amp;#39;Facet Column&amp;#39;, c(None=&amp;#39;.&amp;#39;, names(dataset)))
  ),
  
  mainPanel(
    plotOutput(&amp;#39;plot&amp;#39;)
  )
)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;section-r-script-that-works-as-the-server-logic&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;R script that works as the server logic:&lt;/h2&gt;
&lt;p&gt;saved as &lt;code&gt;Shinyapp_1/server.R&lt;/code&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;## server.R

library(shiny)
library(ggplot2)

function(input, output) {
    
    dataset &amp;lt;- reactive({
        diamonds[sample(nrow(diamonds), input$sampleSize), ]
    })
    
    output$plot &amp;lt;- renderPlot({
        
        p &amp;lt;- ggplot(dataset(), aes_string(x = input$x, y = input$y)) + geom_point()
        
        if (input$color != &amp;quot;None&amp;quot;) 
            p &amp;lt;- p + aes_string(color = input$color)
        
        facets &amp;lt;- paste(input$facet_row, &amp;quot;~&amp;quot;, input$facet_col)
        if (facets != &amp;quot;. ~ .&amp;quot;) 
            p &amp;lt;- p + facet_grid(facets)
        
        if (input$jitter) 
            p &amp;lt;- p + geom_jitter()
        if (input$smooth) 
            p &amp;lt;- p + geom_smooth()
        
        print(p)
        
    }, height = 700)
    
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Simple call to open shiny webapp inside R terminal This does not work on your blogdown blog as it is a static website without any server-side R running.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;appName &amp;lt;- &amp;quot;Shinyapp_1&amp;quot;
appExists &amp;lt;- tolower(appName) %in% rsconnect::applications()$name&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning in as.POSIXlt.POSIXct(x, tz = tz): unknown timezone &amp;#39;default/
## America/New_York&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;a &amp;lt;- rsconnect::deployApp(&amp;quot;Shinyapp_1/&amp;quot;,appName = tolower(appName),launch.browser = FALSE)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;AppUrl &amp;lt;- paste0(&amp;quot;https://simontuk.shinyapps.io/&amp;quot;,tolower(appName),&amp;quot;/&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;section-so-how-to-link-to-a-runnign-shiny-app-for-interactive-visualization&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;So how to link to a runnign shiny app for interactive visualization?&lt;/h2&gt;
&lt;p&gt;Here I will go through the steps to create a shiny app on shinyapps.io and link to it inside of you rmarkdown file.&lt;/p&gt;
&lt;p&gt;Steps to set up your shinyapps.io account with rsconnect: &lt;a href=&#34;http://docs.rstudio.com/shinyapps.io/getting-started.html&#34;&gt;shinapps.io&lt;/a&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;knitr::include_app(AppUrl, 
  height = &amp;quot;600px&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;iframe src=&#34;https://simontuk.shinyapps.io/shinyapp_1/?showcase=0&#34; width=&#34;672&#34; height=&#34;600px&#34;&gt;
&lt;/iframe&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>
